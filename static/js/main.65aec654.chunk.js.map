{"version":3,"sources":["features/VideoPlayer/VideoPlayer.module.scss","features/SubtitlesList/components/SubtitleCard/SubtitleCard.module.scss","features/SubtitlesPlayer/SubtitlesPlayer.module.scss","screens/MainScreen/MainScreen.module.scss","features/VideoSubtitlesPlayer/VideoSubtitlesPlayer.module.scss","features/SubtitlesList/SubtitleList.module.scss","assets/videos/video.mp4","features/VideoPlayer/videoPlayerSlice.js","features/VideoPlayer/VideoPlayer.jsx","constants/subtitles.js","features/SubtitlesPlayer/SubtitlesPlayer.jsx","features/VideoSubtitlesPlayer/VideoSubtitlesPlayer.jsx","features/SubtitlesList/components/SubtitleCard/SubtitleCard.jsx","features/SubtitlesList/SubtitlesList.jsx","screens/MainScreen/MainScreen.jsx","reportWebVitals.js","store.js","index.jsx"],"names":["module","exports","videoPlayerSlice","createSlice","name","initialState","videoDuration","currentTime","reducers","updateDuration","state","action","payload","updateCurrentTime","actions","VideoPlayer","useState","isPlaying","setVideoIsPlaying","sliderValue","setSliderValue","videoRef","useRef","dispatch","useDispatch","useSelector","player","storeCurrentTime","useEffect","current","duration","Number","isNaN","playVideoToggle","pause","play","className","styles","VideoPlayerWrapper","VideoWrapper","onPlay","onClick","onPauseCapture","onTimeUpdate","e","target","currentPercent","Math","abs","ref","src","mainVideo","controls","kind","VideoControl","IconButton","PlayButton","size","color","fontSize","SliderWrapper","Slider","value","onChange","_debounce","nextValue","percentage","aria-labelledby","max","min","TimeWrapper","Date","toISOString","substr","SUBTITLES","text","startTime","endTime","SubtitlesPlayer","IntervalTree","normalizedTree","setNormalizedTree","tree","forEach","item","insert","searchResults","search","SubtitlesWrapper","map","SubtitleItem","VideoSubtitlesPlayer","VideoSubtitlesPlayerWrapper","SubtitleCard","Paper","elevation","Text","CardBottom","StartTime","EndTime","SubtitlesList","List","String","MainScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","videoPlayerReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.65aec654.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"VideoPlayerWrapper\":\"VideoPlayer_VideoPlayerWrapper__143mN\",\"VideoWrapper\":\"VideoPlayer_VideoWrapper__e0xaF\",\"VideoControl\":\"VideoPlayer_VideoControl__25TA6\",\"PlayButton\":\"VideoPlayer_PlayButton__HaSCN\",\"SliderWrapper\":\"VideoPlayer_SliderWrapper__2ACHg\",\"TimeWrapper\":\"VideoPlayer_TimeWrapper__3_MKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubtitleCard\":\"SubtitleCard_SubtitleCard__1ds_Z\",\"Text\":\"SubtitleCard_Text__166xB\",\"CardBottom\":\"SubtitleCard_CardBottom__3R_0G\",\"StartTime\":\"SubtitleCard_StartTime__vUX6q\",\"EndTime\":\"SubtitleCard_EndTime__ObLjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubtitlesWrapper\":\"SubtitlesPlayer_SubtitlesWrapper__23RXz\",\"SubtitleItem\":\"SubtitlesPlayer_SubtitleItem__3iPdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainScreen\":\"MainScreen_MainScreen__3q2rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VideoSubtitlesPlayerWrapper\":\"VideoSubtitlesPlayer_VideoSubtitlesPlayerWrapper__3Sg47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubtitlesList\":\"SubtitleList_SubtitlesList__3fsrS\"};","export default __webpack_public_path__ + \"static/media/video.8c727da6.mp4\";","import { createSlice } from \"@reduxjs/toolkit\";\n/* eslint-disable no-param-reassign */\nexport const videoPlayerSlice = createSlice({\n  name: \"player\",\n  initialState: {\n    videoDuration: 0,\n    currentTime: 0,\n  },\n  reducers: {\n    updateDuration: (state, action) => {\n      state.videoDuration = action.payload.videoDuration;\n    },\n    updateCurrentTime: (state, action) => {\n      state.currentTime = action.payload.currentTime;\n    },\n  },\n});\n\nexport const { updateDuration, updateCurrentTime } = videoPlayerSlice.actions;\n\nexport default videoPlayerSlice.reducer;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _debounce from \"lodash.debounce\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport Slider from \"@material-ui/core/Slider\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport styles from \"./VideoPlayer.module.scss\";\nimport mainVideo from \"../../assets/videos/video.mp4\";\nimport { updateDuration, updateCurrentTime } from \"./videoPlayerSlice\";\n\n\nexport const VideoPlayer = () => {\n  const [isPlaying, setVideoIsPlaying] = useState(false);\n  const [sliderValue, setSliderValue] = useState(0);\n\n  const videoRef = useRef(null);\n  const dispatch = useDispatch();\n  const videoDuration = useSelector((state) => state.player.videoDuration);\n  const storeCurrentTime = useSelector((state) => state.player.currentTime);\n\n\n  const handleTimeUpdate = (e) => {\n    const { currentTime } = e.target;\n    const currentPercent = (currentTime / videoDuration) * 100;\n    // update slider position, only if  it has\n    // significant changes (in current case -  1% )\n    // do this for decrease re-renders\n    if (Math.abs(currentPercent - sliderValue) > 1) {\n      setSliderValue(currentPercent);\n    }\n    if (Math.abs(storeCurrentTime - currentTime) > 0.5) {\n      dispatch(updateCurrentTime({ currentTime }));\n    }\n\n  };\n\n  const handleSliderChange = (e, nextValue) => {\n    const percentage = nextValue / 100;\n    if (videoRef.current) {\n      videoRef.current.currentTime = videoDuration * percentage;\n    }\n  };\n\n  useEffect(() => {\n    if (videoRef.current) {\n      const {duration} = videoRef.current;\n      if (!Number.isNaN(duration)) {\n        dispatch(updateDuration({ videoDuration: duration }));\n      }\n    }\n  }, [videoRef.current]);\n\n\n\n  const onPlayHandle = () => {\n    setVideoIsPlaying(true);\n  };\n  const onPauseHandle = () => {\n    setVideoIsPlaying(false);\n  };\n\n  const playVideoToggle = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.VideoPlayerWrapper}>\n      <div className={styles.VideoWrapper}>\n        <video\n          onPlay={onPlayHandle}\n          onClick={playVideoToggle}\n         \n          onPauseCapture={onPauseHandle}\n          onTimeUpdate={handleTimeUpdate}\n          ref={videoRef}\n          src={mainVideo}\n          controls={false}\n        >\n          <track kind=\"captions\" />\n        </video>\n        <div className={styles.VideoControl}>\n          <IconButton\n            className={styles.PlayButton}\n            size=\"medium\"\n            color=\"primary\"\n            onClick={playVideoToggle}\n          >\n            {isPlaying ? (\n              <PauseIcon fontSize=\"14px\" />\n            ) : (\n              <PlayArrowIcon fontSize=\"14px\" />\n            )}\n          </IconButton>\n          <div className={styles.SliderWrapper}>\n            <Slider\n              value={sliderValue}\n              onChange={_debounce(handleSliderChange, 250)}\n              aria-labelledby=\"continuous-slider\"\n              max={100}\n              min={0}\n            />\n          </div>\n          <div className={styles.TimeWrapper}>\n            {new Date(storeCurrentTime * 1000).toISOString().substr(11, 8)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nVideoPlayer.propTypes = {};\n","export const SUBTITLES = [\n  {\n    text: \"* звук тяжелого бега*\",\n    startTime: 0.0,\n    endTime: 1.5,\n  },\n  {\n    text: \"* звуки крутости *\",\n    startTime: 4,\n    endTime: 5.5,\n  },\n  {\n    text: \"* звук приближающегося дедлайна * \",\n    startTime: 6,\n    endTime: 8,\n  },\n  {\n    text: \"* звучит казахская музыка * \",\n    startTime: 9,\n    endTime: 15,\n  },\n  {\n    text: \"* пиу-пиу-пиу * \",\n    startTime: 19,\n    endTime: 21,\n  },\n  {\n    text: \"* поет на иностранном * \",\n    startTime: 26,\n    endTime: 28,\n  },\n  {\n    text: \" отсылка к матрице  \",\n    startTime: 34,\n    endTime: 37,\n  },\n  {\n    text: \"* цыфры знаешь - набери * \",\n    startTime: 39,\n    endTime: 41,\n  },\n  {\n    text: \"* звуки того, как крутые парни не смотрят на взрыв * \",\n    startTime: 64.57,\n    endTime: 70,\n  },\n  {\n    text: \"Cериал БРИГАДА\",\n    startTime: 71.5,\n    endTime: 73,\n  },\n];\n","import React, { useEffect, useState } from \"react\";\n\nimport IntervalTree from \"@flatten-js/interval-tree\";\n\nimport { useSelector } from \"react-redux\";\nimport { SUBTITLES } from \"../../constants/subtitles\";\nimport styles from \"./SubtitlesPlayer.module.scss\";\n\nexport const SubtitlesPlayer = () => {\n  const storeCurrentTime = useSelector((state) => state.player.currentTime);\n  const [normalizedTree, setNormalizedTree] = useState(new IntervalTree());\n  useEffect(() => {\n    const tree = new IntervalTree();\n    SUBTITLES.forEach((item) => {\n      tree.insert([item.startTime, item.endTime], item.text);\n    });\n    setNormalizedTree(tree);\n  }, []);\n  const searchResults = normalizedTree.search([\n    storeCurrentTime,\n    storeCurrentTime,\n  ]);\n\n  return (\n    <div className={styles.SubtitlesWrapper}>\n      {searchResults.map((item) => (\n        <div className={styles.SubtitleItem}>{item}</div>\n      ))}\n    </div>\n  );\n};\n\nSubtitlesPlayer.propTypes = {};\n","import React from \"react\";\n\nimport VideoPlayer from \"../VideoPlayer\";\nimport SubtitlesPlayer from \"../SubtitlesPlayer\";\nimport styles from \"./VideoSubtitlesPlayer.module.scss\";\n\nexport const VideoSubtitlesPlayer = () => (\n  <div className={styles.VideoSubtitlesPlayerWrapper}>\n    <VideoPlayer />\n    <SubtitlesPlayer />\n  </div>\n);\n\nVideoSubtitlesPlayer.propTypes = {};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport styles from \"./SubtitleCard.module.scss\";\n\nexport const SubtitleCard = ({ text, startTime, endTime }) => (\n    <div className={styles.SubtitleCard}>\n      <Paper elevation={3}>\n        <p className={styles.Text}>{text}</p>\n        <div className={styles.CardBottom}>\n          <span className={styles.StartTime}>\n            {new Date(startTime * 1000).toISOString().substr(11, 11)}\n          </span>\n          <span className={styles.EndTime}>\n            {new Date(endTime * 1000).toISOString().substr(11, 11)}\n          </span>\n        </div>\n      </Paper>\n    </div>\n  );\n\nSubtitleCard.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from \"react\";\n\nimport { List } from \"@material-ui/core\";\nimport { SUBTITLES } from \"../../constants/subtitles\";\nimport SubtitleCard from \"./components/SubtitleCard\";\n\nimport styles from \"./SubtitleList.module.scss\";\n\nconst SubtitlesList = () => (\n  <div className={styles.SubtitlesList}>\n    <List>\n      {SUBTITLES.map(({ text, startTime, endTime }) => (\n        <SubtitleCard\n          key={`${String(startTime)}-${String(endTime)}`}\n          text={text}\n          startTime={startTime}\n          endTime={endTime}\n        />\n      ))}\n    </List>\n  </div>\n);\n\nSubtitlesList.propTypes = {};\n\nexport default SubtitlesList;\n","import React from \"react\";\nimport styles from \"./MainScreen.module.scss\";\nimport VideoSubtitlesPlayer from \"../../features/VideoSubtitlesPlayer\";\nimport SubtitlesList from \"../../features/SubtitlesList/SubtitlesList\";\n// import PropTypes from 'prop-types';\n\nexport const MainScreen = () => (\n  <div className={styles.MainScreen}>\n    <VideoSubtitlesPlayer />\n    <SubtitlesList />\n  </div>\n);\n\nMainScreen.propTypes = {};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport videoPlayerReducer from './features/VideoPlayer/videoPlayerSlice'\n\nexport default configureStore({\n    reducer: {\n        player: videoPlayerReducer\n    },\n  })","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./scss/app.global.scss\";\n\nimport MainScreen from \"./screens/MainScreen\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MainScreen />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}